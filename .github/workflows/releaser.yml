name: Releaser
on: [ workflow_call ]

jobs:
  releaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: version
        name: Determine version
        run: echo "version=$(jq -r .version version.json)" >> $GITHUB_OUTPUT
      - id: labels
        name: Determine PR labels if this commit is a merged PR (if we're not on a default branch)
        if: github.ref != format('refs/heads/{0}', github.event.repository.default_branch)
        run: echo "labels=$(gh api -X GET "$ENDPOINT" --jq "$SELECTOR" -f sort="$SORT" -f direction="$DIRECTION" -f state="$STATE")" >> $GITHUB_OUTPUT          
        env:
          GITHUB_TOKEN: ${{ github.token }}
          ENDPOINT: repos/${{ github.repository }}/pulls
          SELECTOR: map(select(.merge_commit_sha == "${{ github.sha }}")) | .[0].labels // [] | map(.name)
          SORT: updated
          DIRECTION: desc
          STATE: closed
      - id: tag
        name: Check if tag already exists
        if: steps.version.outputs.version != ''
        uses: mukunku/tag-exists-action@9298fbcc409758ba624a0ae16b83df86637cb8ce # v1.2.0
        with:
          tag: ${{ steps.version.outputs.version }}
      - id: release
        name: Create release
        if: steps.version.outputs.version != '' && steps.tag.outputs.exists == 'false' && (
            github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ||
            contains(fromJSON(steps.labels.outputs.labels), 'release'))
        uses: galargh/action-gh-release@25b3878b4c346655a4d3d9bea8b76638f64743cf # https://github.com/softprops/action-gh-release/pull/316
        with:
          draft: false
          tag_name: ${{ steps.version.outputs.version }}
          generate_release_notes: true
          target_commitish: ${{ github.sha }}
      - name: Create release.json
        if: steps.release.outputs.id != ''
        env:
          RELEASE: |
            {
              "draft": false,
              "version": "${{ steps.version.outputs.version }}",
              "url": "${{ steps.release.outputs.url }}",
              "id": "${{ steps.release.outputs.id }}",
              "upload_url": "${{ steps.release.outputs.upload_url }}",
              "assets": ${{ steps.release.outputs.assets }}
            }
        run: jq . <<< "$RELEASE" > release.json
      - name: Upload release.json
        if: steps.release.outputs.id != ''
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: release.json
